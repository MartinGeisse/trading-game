
Milestones:
- UI
    - Map Performance
        - def. MaxSpaceObjectRadius; Space.getStaticSpaceObjects(boudningbox) vergrößert bbox um MaxSpaceObjectRadius
            und sucht nach Mittelpunkten per geo-index. Per Namen der Methode klarmachen, dass diese nach overlap
            sucht
	- Map-GUI
	- aktionen der Space Objects über Map auswählbar
- Spielinhalt
	- Erz in SpaceStation verkaufen
	- Schiffe können Upgrades haben
	- Upgrades in SpaceStation kaufen
	- verschiedene Erzsorten in den Asteroiden
	- Upgrades müssen als Actions mit Zeit gebaut werden, brauchen verschiedene Erze und sind gleich im Schiff verbaut
		- schneller fliegen
		- schneller Erz abbauen
		- höhere Ausbeute
		- mehr Frachtraum
- Feinschliff
	- Restzeit bei Mining anhand von Restbestand und Frachtraum ermitteln
	- prerequisite actions farblich hervorgehoben und nicht cancellable

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Umsetzungs-Überlegungen (betr. alle Milestones)
- Spielzeit bei vielen Spielobjekten
	- für alle Objekte tick() aufrufen wird irgendwann das System ausbremsen!
	- einfacher Ansatz: Objekte geben an, ob ihre tick()-Methode leer ist, und werden dann massenweise davon ausgenommen
	- Verbesserung 1: Jedes Objekt liefert die Anzahl ticks, bis etwas interessantes passiert. Außerdem lässt jedes
		Objekt einen Zähler mitlaufen, wie viele Ticks es schon bekommen hat. Erst wenn die Ticks nötig sind, werden
		sie ausgeführt, und dann massenhaft (nötig: nötig für UI oder es passiert etwas interessantes anhand vorheriger
		Def, z.B. Aktion fertig) -> optimiert für Spieler, die gerade offline sind.
    - Verbesserung 2: Es gibt keine Ticks mehr. Stattdessen wird ein Call ausgeführt, sobald etwas interessantes
    	passiert. Für UI sowie beim Abbruch von Aktionen wird ein Zwischenergebnis interpoliert.
    	Das vermeidet auch Rundungsfehler beim Zwischenergebnis von Bewegung ganz gut, ist aber davon abhängig, dass
    	die Gesamtzeit für Bewegung genau ermittelt wird.
- Prerendering der Map ist vor allem für Asteroidenfelder wichtig. Bei Sternen und Planeten würden DIVs reichen,
	zumindest wenn man nicht extrem weit rauszoomt. Hier wäre es sinnvoll, dass die gerenderte Map nicht einfach aus
	Quadraten besteht, sondern aus Rechtecken mit Größen- und Positionsangabe -- dann kann man diese Fälle
	verallgemeinern.
